@page "/"
@inject IJSRuntime js

<div class="main-container">
	<aside>
		<StarMenu MenuItems="_menuItems" @ref="_starMenu" />
	</aside>
	<main>
		<div class="music-visualizer"></div>
		<div class="controlbuttons"></div>
	</main>
</div>

@code {

	private int _currentIndex = 0;
	private bool _isChanging = false;
	private StarMenu _starMenu;

	private List<string> _menuItems = ["bi-spotify", "bi-bluetooth", "bi-tv-fill"];

	protected async override Task OnInitializedAsync()
	{
		await js.InvokeVoidAsync("JsFunctions.addKeyboardListenerEvent", DotNetObjectReference.Create(this));
	}

	[JSInvokable]
	public async Task JsKeyPress(string key)
	{
		if (!_isChanging)
		{
			switch (key)
			{
				case "w":
					await SetIndex(_currentIndex + 1);
					break;
				case "s":
					await SetIndex(_currentIndex - 1);
					break;
				case "a":
					await SetIndex(0);
					break;
				case "d":
					await SetIndex(2);
					break;
			}
		}
	}

	private async Task SetIndex(int newIndex)
	{
		_isChanging = true;
		_currentIndex = _starMenu.SetSelectedIndex(newIndex);
		await WaitChangeStatus();
		_isChanging = false;
	}


	private async Task WaitChangeStatus()
	{
		StateHasChanged();
		await Task.Delay(500);
	}
}

